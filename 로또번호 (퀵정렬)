#include <stdio.h>
#include <stdlib.h> //rand, srand 함수수
#include <time.h> //시간 함수
#include <unistd.h> //sleep 함수

void quickSort(int *num, int start, int end)
{
    if(start >= end) {
		return;
    }
    
    int pivot = start;	// 피봇은 첫 번째 원소  
	int i = pivot + 1;	//i는 피봇 다음 원소 
	int j = end;	//j는 마지막 원소 
	int temp;
	
    while (i <= j) {
        while(i <= end && num[i] <= num[pivot]) {
            ++i;
		}
		
		while (j > start && num[j] >= num[pivot]) {
		    --j;
		}
		
		if (i < j) { // 값 교환
		    temp = num[i];
		    num[i] = num[j];
		    num[j] = temp;
		}  
	}
	
	// 피봇 정렬 완료
	temp = num[j];
	num[j] = num[pivot];
	num[pivot] = temp;
	
	quickSort(num, start, j - 1); // 피봇 중심 왼쪽부분 분할
	quickSort(num, j + 1, end);   // 피봇 중심 오른쪽부분 분할
}	
	
int main() {
    
    int i;
    int j;
    int temp;
    int num[6];
    
    srand(time(NULL));
    
    // 중복제거
    for (i = 0; i < 6; i++) {
        num[i] = (int)(rand() % 45) + 1; // 45로 나눈 나머지는 항상 0~45
        for (j = 0; j < i; j++) {
            if(num[i] == num[j]) {
                i--; // 중복된 경우 빼주기
                break;
            }
        }
    }
    
    quickSort(num, 0, 5); // 퀵정렬로 배열 정렬
    
    for (i = 0; i < 6; i++) {
        printf("%d\n", num[i]);
        sleep(1); //1초에 한개씩 출력되게 하기
    }
    return 0;
} 
